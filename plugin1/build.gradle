apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"


    defaultConfig {
        applicationId "com.android.skill"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all{ variant ->
        variant.outputs.each{ output ->
            def file = output.outputFile
            if(file.name.contains("release")){
                output.outputFile = new File(file.parent, file.name.replace(".apk", "-V" + defaultConfig.versionName + ".apk"))
            }else {
                output.outputFile = new File(file.parent,file.name)
            }
            println("$buildDir/outputs/apk/")
            println("$rootDir/app/src/main/assets/")
            copy{
                from("$buildDir/outputs/apk/${file.name}")
                into("$rootDir/app/src/main/assets")
            }
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:28.0.0'
    compile 'com.android.support.constraint:constraint-layout:1.1.3'
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:+', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //只是在编译时，使用mypluglibrary.jar这个jar，打包时，不会将mypluglibrary.jar打包进apk中
    //注意是lib目录，不是libs目录，如果将mypluglibrary.jar放入libs目录下，则provided这行配置信息会失效
    provided files('lib/mypluglibrary.jar')
}

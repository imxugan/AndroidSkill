<resources>
    <string name="app_name">MyRetrofitTest</string>
    <string name="get_no_params_no_converter_factory">get方法，url未带请求参数的,未使用GsonConverterFactory.create()解析器 使用演示</string>
    <string name="get_no_params_converer_factory">get方法，url未带请求参数的,但是使用了GsonConverterFactory.create()解析器 使用演示</string>
    <string name="get_params_converter_factory">get方法，url?之前带了请求参数的 使用演示</string>
    <string name="get_params_converter_factory_after">get方法，url?之后带了请求参数的 使用演示</string>
    <string name="get_params_converter_factory_after_more_params">get方法，url?之后带了多个请求参数的 使用演示</string>
    <string name="post_params_converter_factory">post方法，带了一个请求参数的 使用演示</string>
    <string name="post_params_converter_factory_more_params">post方法，带了多个请求参数的 使用演示</string>
    <string name="post_params_converter_factory_request_body_params">post方法，请求参数是个json字符串 使用演示</string>
    <string name="post_params_converter_factory_Object_params">post方法，请求参数是个User对象 使用演示</string>
    <string name="post_params_converter_factory_Object_params2">post方法，请求参数是个User对象,采用multipar方式进行封装， 使用演示</string>
    <string name="post_params_converter_factory_Object_params3">post方法，请求参数是个User对象,采用multipar方式进行封装的另外一种方式， 使用演示</string>
    <string name="post_params_converter_factory_upload_files_1">post方法，文件上传，采用MultiparBody.Part方式封装文件 使用演示</string>
    <string name="post_params_converter_factory_upload_files_2">post方法，文件上传，采用MultiparBody方式封装文件 使用演示</string>
</resources>
